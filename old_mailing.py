from telethon import TelegramClient, sync
from telethon.tl.functions.contacts import ImportContactsRequest
from telethon.tl.types import InputPhoneContact
from telethon.errors import PeerFloodError, FloodWaitError
import os
import logging
from dotenv import load_dotenv
import uuid
import json
import time

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

logger.info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
logger.warning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
logger.error("–û—à–∏–±–∫–∞")
load_dotenv(dotenv_path='.env')

api_id = os.getenv('api_id')
api_hash = os.getenv('api_hash')
phone = '+79961272158'

# –°–ª–æ–≤–∞—Ä—å —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –∏–º–µ–Ω–∞–º–∏
users_v2 = {
    '+79286253895': '–ê–ª–∏–Ω–æ—á–∫–∞ –∑–∞–π–∫–∞'
    # –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}


message = '''
–ß–∞–π–Ω–æ–π –ò—Å—Ç–æ—Ä–∏–∏ —É–∂–µ —Å–∫–æ—Ä–æ 10 –õ–ï–¢ üî•

–ú—ã —É–∂–µ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å –Ω–∞ —Å–≤–æ–µ–º –∫–∞–Ω–∞–ª–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –æ–± –∞–∫—Ü–∏—è—Ö –∏ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —á–∞–π–Ω–æ–º—É –∫–æ–º–º—å—é–Ω–∏—Ç–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–∞–º—ã—Ö –≤–∫—É—Å–Ω—ã—Ö –ø–∏–∞–ª! üçµ 

‚û°Ô∏è https://t.me/chaystory ‚¨ÖÔ∏è
'''

# # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –¥–ª—è –∏–º–µ–Ω–∏ —Å–µ—Å—Å–∏–∏
# session_name = f'anon_{uuid.uuid4()}'

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ TelegramClient
client = TelegramClient("mailing", api_id, api_hash)

with open("new_file.json", "r") as read_file:
    users = json.load(read_file)
    users = users['users']


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞

def send_message_to_user(phone_number, message):
    try:
        # –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        contacts = [InputPhoneContact(client_id=0, phone=phone_number, first_name=f"{phone_number}", last_name="")]
        result = client(ImportContactsRequest(contacts))

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ø–∏—Å–∫–µ
        while PeerFloodError:
            if result.users:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_id = result.users[0].id

                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                client.send_message(user_id, message)

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                time.sleep(10)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 30 —Å–µ–∫—É–Ω–¥, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            else:
                logger.warning(f"No users found for phone number: {phone_number}")
    except PeerFloodError as e:
        logger.error(f"Encountered PeerFloodError: {e}. Pausing message sending for a while.")
        time.sleep(100)
    except FloodWaitError as e:
        logger.error(f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ FloodWaitError: {e}. –ü–∞—É–∑–∞ –Ω–∞ {e.seconds} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π.")
        time.sleep(e.seconds + 1)  # –î–æ–±–∞–≤–ª—è–µ–º 1 —Å–µ–∫—É–Ω–¥—É –∫ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == '__main__':
    print(users)
    print(users_v2)
    # –í—Ö–æ–¥ –≤ Telegram
    client.start(phone=phone)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ —Å–ª–æ–≤–∞—Ä–µ
    for phone_number, individual_message in users.items():
        send_message_to_user(phone_number, message)